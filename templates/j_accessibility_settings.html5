<?php 
$GLOBALS['TL_HEAD'][] = '<link rel="stylesheet" type="text/css" href="files/cto_layout/css/accessiblity_widget/acc_accessibility_dropdowns.css">';
$GLOBALS['TL_HEAD'][] = '<link rel="stylesheet" type="text/css" href="files/cto_layout/css/accessiblity_widget/acc_boldface.css">';
$GLOBALS['TL_HEAD'][] = '<link rel="stylesheet" type="text/css" href="files/cto_layout/css/accessiblity_widget/acc_default_fonts.css">';
$GLOBALS['TL_HEAD'][] = '<link rel="stylesheet" type="text/css" href="files/cto_layout/css/accessiblity_widget/acc_focus.css">';
$GLOBALS['TL_HEAD'][] = '<link rel="stylesheet" type="text/css" href="files/cto_layout/css/accessiblity_widget/acc_fontsize.css">';
?>

<script>
jQuery(document).ready(function($) {
    const storedKeys = ['activeButtons'];
    let animationInProgress = false;

    function saveToLocalStorage(key, value) {
        localStorage.setItem(key, JSON.stringify(value));
    }

    function getFromLocalStorage(key) {
        return JSON.parse(localStorage.getItem(key));
    }

    function applySavedSettings() {
        const activeButtons = getFromLocalStorage('activeButtons') || [];
        activeButtons.forEach(buttonClass => {
            $('.accessibility-tools .tool-button[data-body-class="' + buttonClass + '"]').addClass('active');
            $('body').addClass(buttonClass);
        });
    }

    function resetSettings() {
        $('.accessibility-tools .tool-button.active').removeClass('active');
        $('body').removeClass(function (index, className) {
            return (className.match(/(^|\s)body-class\S+/g) || []).join(' ');
        });
        saveToLocalStorage('activeButtons', []);
        storedKeys.forEach(function(key) {
            localStorage.removeItem(key);
        });
        closeTools();
    }

    function closeTools() {
        const $tools = $('#accessibility-tools');
        if (!$tools.hasClass('open')) return;
        $tools.removeClass('open');
        setTimeout(function() {
            $tools.css('visibility', 'hidden');
        }, 600); // Matches the transition duration
        $('#open-tools').html('<i class="fa fa-universal-access"></i><small class="shortcut-text">Ctrl+<br>Shift+A</small>');
        animationInProgress = false;
    }

    function openTools() {
        const $tools = $('#accessibility-tools');
        if ($tools.hasClass('open')) return;
        $tools.css('visibility', 'visible');
        $tools.addClass('open');
        $('#open-tools').html('<i class="fa fa-times"></i><small class="shortcut-text">Ctrl+<br>Shift+A</small>');
        animationInProgress = false;
    }

    $('#open-tools').on('click', function() {
        if (animationInProgress) return;
        animationInProgress = true;
        const $tools = $('#accessibility-tools');
        if ($tools.hasClass('open')) {
            closeTools();
        } else {
            openTools();
        }
    });

    $('.close-button, .save-button').on('click', closeTools);

    $('.accessibility-tools .tool-button').on('click', function() {
        const bodyClass = $(this).data('body-class');
        $(this).toggleClass('active');
        $('body').toggleClass(bodyClass);

        const activeButtons = [];
        $('.accessibility-tools .tool-button.active').each(function() {
            activeButtons.push($(this).data('body-class'));
        });
        saveToLocalStorage('activeButtons', activeButtons);
    });

    $('.accessibility-tools .reset-button').on('click', resetSettings);

    // Keyboard shortcuts
    $(document).on('keydown', function(e) {
        if (e.ctrlKey && e.shiftKey && e.which === 65) { // Ctrl+Shift+A
            $('#open-tools').click();
        } else if (e.which === 27) { // ESC
            closeTools();
        }
    });

    applySavedSettings();
});


</script>